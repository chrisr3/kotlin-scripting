import org.jetbrains.kotlin.gradle.tasks.KotlinCompile
import static org.gradle.jvm.toolchain.JavaLanguageVersion.of
import static org.gradle.api.JavaVersion.VERSION_11

plugins {
    id 'org.jetbrains.kotlin.jvm' apply false
}

subprojects {
    group = 'com.example.scripting'
    version = scriptingVersion

    pluginManager.withPlugin('java') {
        java {
            toolchain {
                languageVersion = of(11)
            }
        }
    }

    tasks.withType(JavaCompile).configureEach {
        options.encoding = 'UTF-8'
    }

    tasks.withType(KotlinCompile).configureEach {
        kotlinOptions {
            languageVersion = '1.4'
            apiVersion = '1.4'
            verbose = true
            jvmTarget = VERSION_11
            freeCompilerArgs += [
                '-Xjvm-default=all',
                // Prevent Kotlin from warning about kotlin.* classes inside the OSGi bundle.
                '-Xskip-runtime-version-check',
                '-java-parameters'
            ]
        }
    }

    tasks.withType(Test).configureEach {
        useJUnitPlatform()
    }

    configurations {
        [ compileClasspath, testCompileClasspath, runtimeClasspath, testRuntimeClasspath ].forEach { cfg ->
            configureKotlinForOSGi(cfg)
        }
    }
}

// Ensure that we both compile and run using Kotlin OSGi bundles.
// We must ONLY invoke this for Kotlin's classpath configurations.
void configureKotlinForOSGi(Configuration configuration) {
    configuration.resolutionStrategy {
        dependencySubstitution {
            substitute module('org.jetbrains.kotlin:kotlin-stdlib-jdk8') with module("net.corda.kotlin:kotlin-stdlib-jdk8-osgi:$kotlinVersion")
            substitute module('org.jetbrains.kotlin:kotlin-stdlib-jdk7') with module("net.corda.kotlin:kotlin-stdlib-jdk7-osgi:$kotlinVersion")
            substitute module('org.jetbrains.kotlin:kotlin-stdlib-common') with module("org.jetbrains.kotlin:kotlin-osgi-bundle:$kotlinVersion")
            substitute module('org.jetbrains.kotlin:kotlin-stdlib') with module("org.jetbrains.kotlin:kotlin-osgi-bundle:$kotlinVersion")
            substitute module('org.jetbrains.kotlin:kotlin-reflect') with module("org.jetbrains.kotlin:kotlin-osgi-bundle:$kotlinVersion")
        }
    }
}

wrapper {
    gradleVersion = '7.2'
}
